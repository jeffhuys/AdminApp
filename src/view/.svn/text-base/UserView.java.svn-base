/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * User.java
 *
 * Created on Dec 22, 2011, 3:49:11 PM
 */
package view;

import controller.UsersController;
import java.awt.Color;
import java.awt.Font;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author Mauricio
 */
public class UserView extends javax.swing.JFrame {
    private UsersController usersController;

    /** Creates new form User */
    public UserView() {
        initComponents();
    }

    /**
     * Constructor view, vewacht UserController
     * @param usercontroller 
     */
    public UserView(UsersController userscontroller) {
        this.usersController = userscontroller;
        initComponents();
        // Dit mag niet visible zijn bij init, allen bij een erruer
        setFeedback("");
    }

    /**
     * Getter
     * @return String wachtwoord1
     */
    public String getWachtwoord1() {
        return new String(wachtwoord1.getPassword());
    }

    /**
     * Getter 
     * @return String wachtwoord2
     */
    public String getWachtwoord2() {
        return new String(wachtwoord2.getPassword());
    }

    /**
     * Getter
     * @return String voornaam
     */
    public String getVoornaam() {
        return voornaam.getText();
    }

    /**
     * Getter
     * @return String achternaam
     */
    public String getAchternaam() {
        return achternaam.getText();
    }
    
    /**
     * Setter voor de feedbacklabel. Verwacht kleur voor de tekst
     * maakt de tekst ook cursief
     * @param txt
     * @param color 
     */
    public void setFeedback(String txt, Color color) {
        Font font = new Font("Lucida Grande", Font.ITALIC, 13);
        feedbackLabel.setFont(font);
        feedbackLabel.setForeground(color);
        feedbackLabel.setText(txt);
        imageLabel.setVisible(!txt.equals(""));
    }
    /**
     * Feedback lable zettten met standaard kleur (zwart)
     * @param txt melding
     */
    public void setFeedback(String txt) {
        setFeedback(txt, Color.BLACK);
    }

    /**
     * Reset de form, alles leeg
     */
    public void resetForm() {
        voornaam.setText("");
        achternaam.setText("");
        wachtwoord1.setText("");
        wachtwoord2.setText("");
        makeAdmin.setSelected(false);

    }

    /**
     * Getter
     * @return String feedback
     */
    public String getFeeback() {
        return feedbackLabel.getText();
    }
    /**
     * Direct nog een gebruiker toevoegen
     * @return boolean indien niet naangevinkt false
     */
    public boolean isGebruikerToevoegen() {
        return nogEenGebruiker.isSelected();
    }
    /**
     * Controleer of het een admin moet worden
     * @return boolean true = admin
     */
    public boolean isAdminUser() {
        return makeAdmin.isSelected();
    }
    /**
     * TextField voor smartcard ophalen
     * @return JTextField
     */
    public JTextField getStatusPasTextField() {
        return statusPasTextField;
    }
    /**
     * Haalt de opslaan knop op uit de view
     * @return JButton opslaan/wijzigen
     */
    public JButton getOpslaanButton() {
        return opslaanButton;
    }
        
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        voornaam = new javax.swing.JTextField();
        achternaam = new javax.swing.JTextField();
        wachtwoord1 = new javax.swing.JPasswordField();
        wachtwoord2 = new javax.swing.JPasswordField();
        voornaamLabel = new javax.swing.JLabel();
        achternaamLabel = new javax.swing.JLabel();
        wachtwoordLabel1 = new javax.swing.JLabel();
        wachtwoordLabel2 = new javax.swing.JLabel();
        opslaanButton = new javax.swing.JButton();
        feedbackLabel = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();
        nogEenGebruiker = new javax.swing.JCheckBox();
        makeAdmin = new javax.swing.JCheckBox();
        statusPasLabel = new javax.swing.JLabel();
        statusPasTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Gebruikers toevoegen");

        voornaam.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        achternaam.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        wachtwoord1.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        wachtwoord2.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        voornaamLabel.setText("Voornaam");

        achternaamLabel.setText("Achternaam");

        wachtwoordLabel1.setText("Wachtwoord");

        wachtwoordLabel2.setText("Wachtwoord herhalen");

        opslaanButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user_add.png"))); // NOI18N
        opslaanButton.setText("Toevoegen");
        opslaanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opslaanButtonActionPerformed(evt);
            }
        });

        feedbackLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        feedbackLabel.setText("Feedback label");

        imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/error.png"))); // NOI18N

        nogEenGebruiker.setText("Direct nog een gebruiker toevoegen");
        nogEenGebruiker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nogEenGebruikerActionPerformed(evt);
            }
        });

        makeAdmin.setText("Geef admin rechten");
        makeAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeAdminActionPerformed(evt);
            }
        });

        statusPasLabel.setText("Status pas:");

        statusPasTextField.setEditable(false);
        statusPasTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusPasTextFieldActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(makeAdmin)
                    .add(jLabel1)
                    .add(nogEenGebruiker)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, opslaanButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(imageLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(feedbackLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 279, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(wachtwoordLabel2)
                            .add(wachtwoordLabel1)
                            .add(achternaamLabel)
                            .add(voornaamLabel)
                            .add(statusPasLabel))
                        .add(57, 57, 57)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, wachtwoord2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, wachtwoord1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, achternaam, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                            .add(voornaam, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                            .add(statusPasTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(voornaam, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(voornaamLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(achternaam, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(achternaamLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(wachtwoord1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(wachtwoordLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(wachtwoord2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(wachtwoordLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(statusPasTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(statusPasLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(nogEenGebruiker)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(makeAdmin)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(opslaanButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(feedbackLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(imageLabel))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        /**
     * Gebruikers gegevens opslaan (toevoegen/verwijderen)
     * @param evt 
     */
	private void opslaanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opslaanButtonActionPerformed
            // Knopje ingedrukt? dan gaan we het verwerken
            usersController.verwerkFormulier();
	}//GEN-LAST:event_opslaanButtonActionPerformed

	private void nogEenGebruikerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nogEenGebruikerActionPerformed
            // TODO add your handling code here:
	}//GEN-LAST:event_nogEenGebruikerActionPerformed

private void makeAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeAdminActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_makeAdminActionPerformed

    private void statusPasTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusPasTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusPasTextFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField achternaam;
    private javax.swing.JLabel achternaamLabel;
    private javax.swing.JLabel feedbackLabel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JCheckBox makeAdmin;
    private javax.swing.JCheckBox nogEenGebruiker;
    private javax.swing.JButton opslaanButton;
    private javax.swing.JLabel statusPasLabel;
    private javax.swing.JTextField statusPasTextField;
    private javax.swing.JTextField voornaam;
    private javax.swing.JLabel voornaamLabel;
    private javax.swing.JPasswordField wachtwoord1;
    private javax.swing.JPasswordField wachtwoord2;
    private javax.swing.JLabel wachtwoordLabel1;
    private javax.swing.JLabel wachtwoordLabel2;
    // End of variables declaration//GEN-END:variables
    /**
     * Zet de achternaam van een gebruiker
     * @param achternaam Achternaam van een gebruiker
     */
    public void setAchternaam(String achternaam) {
        this.achternaam.setText(achternaam);
    }
    /**
     * Maak de gebruiker admin
     * @param admin tinyint voor db
     */
    public void setMakeAdmin(boolean admin) {
        this.makeAdmin.setSelected(admin);
    }
    /**
     * Zet smartcardID in gebruikerspas veld
     * @param statusPasTextField String serinummer
     */
    public void setStatusPasTextField(String statusPasTextField) {
        this.statusPasTextField.setText(statusPasTextField);
    }
    /**
     * Voornaam ophalen
     * @param voornaam String met voornaam
     */
    public void setVoornaam(String voornaam) {
        this.voornaam.setText(voornaam);
    }

}